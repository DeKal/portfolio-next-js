// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Experiences should render without throwing an error 1`] = `
.c1 {
  padding-bottom: 50px;
  text-align: center;
}

.c0 {
  padding-top: 100px;
}

.c5 {
  display: inline-block;
}

.c5::before {
  font-family: "ip",sans-serif;
  font-style: normal;
  font-weight: normal;
  content: '\\e804';
}

.c4 {
  display: block;
}

.c4::before {
  margin-top: 30px;
  float: left;
  color: #bdc3c7;
  font-size: 60px;
  -webkit-transition: color 0.5s;
  transition: color 0.5s;
  display: block;
}

.c4:hover::before {
  color: #FFA726;
}

.c6 {
  margin-left: 80px;
  margin-bottom: 10px;
  text-transform: uppercase;
  font-weight: bold;
}

.c7 {
  margin-left: 80px;
}

.c8 {
  font-size: 15px;
  font-weight: bold;
}

.c3 {
  margin-bottom: 50px;
}

.c2 {
  list-style-type: none;
}

@media screen and (max-width:800px) {
  .c1 {
    padding-bottom: 30px;
  }
}

@media screen and (max-width:800px) {
  .c0 {
    padding-top: 50px;
  }
}

@media screen and (max-width:800px) {
  .c3 {
    margin-bottom: 30px;
  }
}

<Experiences>
  <Container
    id="Experiences"
  >
    <Container__Style>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Container__Style-m3y8on-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "padding-top:100px;@media screen and (max-width:800px){padding-top:50px;}",
              ],
            },
            "displayName": "Container__Style",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Container__Style-m3y8on-0",
            "target": "section",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <section
          className="c0"
        >
          <div
            className="container"
          >
            <Header>
              <Header__Container>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Header__Container-sc-1ix1mqr-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "padding-bottom:50px;text-align:center;@media screen and (max-width:800px){padding-bottom:30px;}",
                        ],
                      },
                      "displayName": "Header__Container",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Header__Container-sc-1ix1mqr-0",
                      "target": "header",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <header
                    className="c1"
                  >
                    <h2>
                      <Translate
                        id="Exp: Title"
                      >
                        <WrappedTranslate
                          context={
                            Object {
                              "activeLanguage": undefined,
                              "addTranslation": [Function],
                              "addTranslationForLanguage": [Function],
                              "defaultLanguage": undefined,
                              "ignoreTranslateChildren": false,
                              "initialize": [Function],
                              "languages": Array [],
                              "renderToStaticMarkup": false,
                              "setActiveLanguage": [Function],
                              "translate": [Function],
                            }
                          }
                          id="Exp: Title"
                        >
                          Missing translationId: Exp: Title for language: \${ languageCode }
                        </WrappedTranslate>
                      </Translate>
                    </h2>
                    <h4>
                      <Translate
                        id="Exp: SubTitle"
                      >
                        <WrappedTranslate
                          context={
                            Object {
                              "activeLanguage": undefined,
                              "addTranslation": [Function],
                              "addTranslationForLanguage": [Function],
                              "defaultLanguage": undefined,
                              "ignoreTranslateChildren": false,
                              "initialize": [Function],
                              "languages": Array [],
                              "renderToStaticMarkup": false,
                              "setActiveLanguage": [Function],
                              "translate": [Function],
                            }
                          }
                          id="Exp: SubTitle"
                        >
                          Missing translationId: Exp: SubTitle for language: \${ languageCode }
                        </WrappedTranslate>
                      </Translate>
                    </h4>
                  </header>
                </StyledComponent>
              </Header__Container>
            </Header>
            <List
              companies={
                Array [
                  "Dek",
                  "YBA",
                  "SmartApp",
                ]
              }
              key="0"
            >
              <List__Container
                className="services"
              >
                <StyledComponent
                  className="services"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "List__Container-sc-1g8dygz-0",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "list-style-type:none;",
                        ],
                      },
                      "displayName": "List__Container",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "List__Container-sc-1g8dygz-0",
                      "target": "ul",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <ul
                    className="c2 services"
                  >
                    <Item
                      description="Exp: Dek Desc"
                      key="Dek"
                      skill="Exp: Dek Skill"
                      title="Exp: Dek Title"
                    >
                      <Item__Container>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Item__Container-sc-24iste-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "margin-bottom:50px;@media screen and (max-width:800px){margin-bottom:30px;}",
                                ],
                              },
                              "displayName": "Item__Container",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Item__Container-sc-24iste-0",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="c3"
                          >
                            <ExpIcon
                              name="workexp"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpIcon-sc-1p80x6s-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:block;&::before{margin-top:30px;float:left;color:",
                                        [Function],
                                        ";font-size:60px;transition:color 0.5s;display:block;}&:hover::before{color:",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "ExpIcon",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpIcon-sc-1p80x6s-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="workexp"
                              >
                                <Icon
                                  className="c4"
                                  name="workexp"
                                >
                                  <Icon__Symbol
                                    className="c4"
                                    name="workexp"
                                  >
                                    <StyledComponent
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Icon__Symbol-sc-1v6tn9f-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display:inline-block;&::before{font-family:",
                                              [Function],
                                              ";font-style:normal;font-weight:normal;content:'",
                                              [Function],
                                              "';}",
                                            ],
                                          },
                                          "displayName": "Icon__Symbol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Icon__Symbol-sc-1v6tn9f-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      name="workexp"
                                    >
                                      <div
                                        className="c5 c4"
                                        name="workexp"
                                      />
                                    </StyledComponent>
                                  </Icon__Symbol>
                                </Icon>
                              </StyledComponent>
                            </ExpIcon>
                            <Title>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Title-sc-198jyi3-0",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "margin-left:80px;margin-bottom:10px;text-transform:uppercase;font-weight:bold;",
                                      ],
                                    },
                                    "displayName": "Title",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Title-sc-198jyi3-0",
                                    "target": "h4",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h4
                                  className="c6"
                                >
                                  <Translate
                                    id="Exp: Dek Title"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: Dek Title"
                                    >
                                      Missing translationId: Exp: Dek Title for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </h4>
                              </StyledComponent>
                            </Title>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Translate
                                    id="Exp: Dek Desc"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: Dek Desc"
                                    >
                                      Missing translationId: Exp: Dek Desc for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </p>
                              </StyledComponent>
                            </Description>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Bold>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Bold-jvs0xn-0",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "font-size:15px;font-weight:bold;",
                                            ],
                                          },
                                          "displayName": "Bold",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Bold-jvs0xn-0",
                                          "target": "b",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <b
                                        className="c8"
                                      >
                                        <Translate
                                          id="Exp: Dek Skill"
                                        >
                                          <WrappedTranslate
                                            context={
                                              Object {
                                                "activeLanguage": undefined,
                                                "addTranslation": [Function],
                                                "addTranslationForLanguage": [Function],
                                                "defaultLanguage": undefined,
                                                "ignoreTranslateChildren": false,
                                                "initialize": [Function],
                                                "languages": Array [],
                                                "renderToStaticMarkup": false,
                                                "setActiveLanguage": [Function],
                                                "translate": [Function],
                                              }
                                            }
                                            id="Exp: Dek Skill"
                                          >
                                            Missing translationId: Exp: Dek Skill for language: \${ languageCode }
                                          </WrappedTranslate>
                                        </Translate>
                                      </b>
                                    </StyledComponent>
                                  </Bold>
                                </p>
                              </StyledComponent>
                            </Description>
                          </li>
                        </StyledComponent>
                      </Item__Container>
                    </Item>
                    <Item
                      description="Exp: YBA Desc"
                      key="YBA"
                      skill="Exp: YBA Skill"
                      title="Exp: YBA Title"
                    >
                      <Item__Container>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Item__Container-sc-24iste-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "margin-bottom:50px;@media screen and (max-width:800px){margin-bottom:30px;}",
                                ],
                              },
                              "displayName": "Item__Container",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Item__Container-sc-24iste-0",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="c3"
                          >
                            <ExpIcon
                              name="workexp"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpIcon-sc-1p80x6s-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:block;&::before{margin-top:30px;float:left;color:",
                                        [Function],
                                        ";font-size:60px;transition:color 0.5s;display:block;}&:hover::before{color:",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "ExpIcon",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpIcon-sc-1p80x6s-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="workexp"
                              >
                                <Icon
                                  className="c4"
                                  name="workexp"
                                >
                                  <Icon__Symbol
                                    className="c4"
                                    name="workexp"
                                  >
                                    <StyledComponent
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Icon__Symbol-sc-1v6tn9f-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display:inline-block;&::before{font-family:",
                                              [Function],
                                              ";font-style:normal;font-weight:normal;content:'",
                                              [Function],
                                              "';}",
                                            ],
                                          },
                                          "displayName": "Icon__Symbol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Icon__Symbol-sc-1v6tn9f-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      name="workexp"
                                    >
                                      <div
                                        className="c5 c4"
                                        name="workexp"
                                      />
                                    </StyledComponent>
                                  </Icon__Symbol>
                                </Icon>
                              </StyledComponent>
                            </ExpIcon>
                            <Title>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Title-sc-198jyi3-0",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "margin-left:80px;margin-bottom:10px;text-transform:uppercase;font-weight:bold;",
                                      ],
                                    },
                                    "displayName": "Title",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Title-sc-198jyi3-0",
                                    "target": "h4",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h4
                                  className="c6"
                                >
                                  <Translate
                                    id="Exp: YBA Title"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: YBA Title"
                                    >
                                      Missing translationId: Exp: YBA Title for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </h4>
                              </StyledComponent>
                            </Title>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Translate
                                    id="Exp: YBA Desc"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: YBA Desc"
                                    >
                                      Missing translationId: Exp: YBA Desc for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </p>
                              </StyledComponent>
                            </Description>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Bold>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Bold-jvs0xn-0",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "font-size:15px;font-weight:bold;",
                                            ],
                                          },
                                          "displayName": "Bold",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Bold-jvs0xn-0",
                                          "target": "b",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <b
                                        className="c8"
                                      >
                                        <Translate
                                          id="Exp: YBA Skill"
                                        >
                                          <WrappedTranslate
                                            context={
                                              Object {
                                                "activeLanguage": undefined,
                                                "addTranslation": [Function],
                                                "addTranslationForLanguage": [Function],
                                                "defaultLanguage": undefined,
                                                "ignoreTranslateChildren": false,
                                                "initialize": [Function],
                                                "languages": Array [],
                                                "renderToStaticMarkup": false,
                                                "setActiveLanguage": [Function],
                                                "translate": [Function],
                                              }
                                            }
                                            id="Exp: YBA Skill"
                                          >
                                            Missing translationId: Exp: YBA Skill for language: \${ languageCode }
                                          </WrappedTranslate>
                                        </Translate>
                                      </b>
                                    </StyledComponent>
                                  </Bold>
                                </p>
                              </StyledComponent>
                            </Description>
                          </li>
                        </StyledComponent>
                      </Item__Container>
                    </Item>
                    <Item
                      description="Exp: SmartApp Desc"
                      key="SmartApp"
                      skill="Exp: SmartApp Skill"
                      title="Exp: SmartApp Title"
                    >
                      <Item__Container>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Item__Container-sc-24iste-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "margin-bottom:50px;@media screen and (max-width:800px){margin-bottom:30px;}",
                                ],
                              },
                              "displayName": "Item__Container",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Item__Container-sc-24iste-0",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="c3"
                          >
                            <ExpIcon
                              name="workexp"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpIcon-sc-1p80x6s-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:block;&::before{margin-top:30px;float:left;color:",
                                        [Function],
                                        ";font-size:60px;transition:color 0.5s;display:block;}&:hover::before{color:",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "ExpIcon",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpIcon-sc-1p80x6s-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="workexp"
                              >
                                <Icon
                                  className="c4"
                                  name="workexp"
                                >
                                  <Icon__Symbol
                                    className="c4"
                                    name="workexp"
                                  >
                                    <StyledComponent
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Icon__Symbol-sc-1v6tn9f-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display:inline-block;&::before{font-family:",
                                              [Function],
                                              ";font-style:normal;font-weight:normal;content:'",
                                              [Function],
                                              "';}",
                                            ],
                                          },
                                          "displayName": "Icon__Symbol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Icon__Symbol-sc-1v6tn9f-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      name="workexp"
                                    >
                                      <div
                                        className="c5 c4"
                                        name="workexp"
                                      />
                                    </StyledComponent>
                                  </Icon__Symbol>
                                </Icon>
                              </StyledComponent>
                            </ExpIcon>
                            <Title>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Title-sc-198jyi3-0",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "margin-left:80px;margin-bottom:10px;text-transform:uppercase;font-weight:bold;",
                                      ],
                                    },
                                    "displayName": "Title",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Title-sc-198jyi3-0",
                                    "target": "h4",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h4
                                  className="c6"
                                >
                                  <Translate
                                    id="Exp: SmartApp Title"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: SmartApp Title"
                                    >
                                      Missing translationId: Exp: SmartApp Title for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </h4>
                              </StyledComponent>
                            </Title>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Translate
                                    id="Exp: SmartApp Desc"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: SmartApp Desc"
                                    >
                                      Missing translationId: Exp: SmartApp Desc for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </p>
                              </StyledComponent>
                            </Description>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Bold>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Bold-jvs0xn-0",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "font-size:15px;font-weight:bold;",
                                            ],
                                          },
                                          "displayName": "Bold",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Bold-jvs0xn-0",
                                          "target": "b",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <b
                                        className="c8"
                                      >
                                        <Translate
                                          id="Exp: SmartApp Skill"
                                        >
                                          <WrappedTranslate
                                            context={
                                              Object {
                                                "activeLanguage": undefined,
                                                "addTranslation": [Function],
                                                "addTranslationForLanguage": [Function],
                                                "defaultLanguage": undefined,
                                                "ignoreTranslateChildren": false,
                                                "initialize": [Function],
                                                "languages": Array [],
                                                "renderToStaticMarkup": false,
                                                "setActiveLanguage": [Function],
                                                "translate": [Function],
                                              }
                                            }
                                            id="Exp: SmartApp Skill"
                                          >
                                            Missing translationId: Exp: SmartApp Skill for language: \${ languageCode }
                                          </WrappedTranslate>
                                        </Translate>
                                      </b>
                                    </StyledComponent>
                                  </Bold>
                                </p>
                              </StyledComponent>
                            </Description>
                          </li>
                        </StyledComponent>
                      </Item__Container>
                    </Item>
                  </ul>
                </StyledComponent>
              </List__Container>
            </List>
            <List
              companies={
                Array [
                  "GCS",
                  "GCS-intern",
                  "Brand360",
                ]
              }
              key="1"
            >
              <List__Container
                className="services"
              >
                <StyledComponent
                  className="services"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "List__Container-sc-1g8dygz-0",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "list-style-type:none;",
                        ],
                      },
                      "displayName": "List__Container",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "List__Container-sc-1g8dygz-0",
                      "target": "ul",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <ul
                    className="c2 services"
                  >
                    <Item
                      description="Exp: GCS Desc"
                      key="GCS"
                      skill="Exp: GCS Skill"
                      title="Exp: GCS Title"
                    >
                      <Item__Container>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Item__Container-sc-24iste-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "margin-bottom:50px;@media screen and (max-width:800px){margin-bottom:30px;}",
                                ],
                              },
                              "displayName": "Item__Container",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Item__Container-sc-24iste-0",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="c3"
                          >
                            <ExpIcon
                              name="workexp"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpIcon-sc-1p80x6s-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:block;&::before{margin-top:30px;float:left;color:",
                                        [Function],
                                        ";font-size:60px;transition:color 0.5s;display:block;}&:hover::before{color:",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "ExpIcon",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpIcon-sc-1p80x6s-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="workexp"
                              >
                                <Icon
                                  className="c4"
                                  name="workexp"
                                >
                                  <Icon__Symbol
                                    className="c4"
                                    name="workexp"
                                  >
                                    <StyledComponent
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Icon__Symbol-sc-1v6tn9f-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display:inline-block;&::before{font-family:",
                                              [Function],
                                              ";font-style:normal;font-weight:normal;content:'",
                                              [Function],
                                              "';}",
                                            ],
                                          },
                                          "displayName": "Icon__Symbol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Icon__Symbol-sc-1v6tn9f-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      name="workexp"
                                    >
                                      <div
                                        className="c5 c4"
                                        name="workexp"
                                      />
                                    </StyledComponent>
                                  </Icon__Symbol>
                                </Icon>
                              </StyledComponent>
                            </ExpIcon>
                            <Title>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Title-sc-198jyi3-0",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "margin-left:80px;margin-bottom:10px;text-transform:uppercase;font-weight:bold;",
                                      ],
                                    },
                                    "displayName": "Title",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Title-sc-198jyi3-0",
                                    "target": "h4",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h4
                                  className="c6"
                                >
                                  <Translate
                                    id="Exp: GCS Title"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: GCS Title"
                                    >
                                      Missing translationId: Exp: GCS Title for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </h4>
                              </StyledComponent>
                            </Title>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Translate
                                    id="Exp: GCS Desc"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: GCS Desc"
                                    >
                                      Missing translationId: Exp: GCS Desc for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </p>
                              </StyledComponent>
                            </Description>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Bold>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Bold-jvs0xn-0",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "font-size:15px;font-weight:bold;",
                                            ],
                                          },
                                          "displayName": "Bold",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Bold-jvs0xn-0",
                                          "target": "b",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <b
                                        className="c8"
                                      >
                                        <Translate
                                          id="Exp: GCS Skill"
                                        >
                                          <WrappedTranslate
                                            context={
                                              Object {
                                                "activeLanguage": undefined,
                                                "addTranslation": [Function],
                                                "addTranslationForLanguage": [Function],
                                                "defaultLanguage": undefined,
                                                "ignoreTranslateChildren": false,
                                                "initialize": [Function],
                                                "languages": Array [],
                                                "renderToStaticMarkup": false,
                                                "setActiveLanguage": [Function],
                                                "translate": [Function],
                                              }
                                            }
                                            id="Exp: GCS Skill"
                                          >
                                            Missing translationId: Exp: GCS Skill for language: \${ languageCode }
                                          </WrappedTranslate>
                                        </Translate>
                                      </b>
                                    </StyledComponent>
                                  </Bold>
                                </p>
                              </StyledComponent>
                            </Description>
                          </li>
                        </StyledComponent>
                      </Item__Container>
                    </Item>
                    <Item
                      description="Exp: GCS-intern Desc"
                      key="GCS-intern"
                      skill="Exp: GCS-intern Skill"
                      title="Exp: GCS-intern Title"
                    >
                      <Item__Container>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Item__Container-sc-24iste-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "margin-bottom:50px;@media screen and (max-width:800px){margin-bottom:30px;}",
                                ],
                              },
                              "displayName": "Item__Container",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Item__Container-sc-24iste-0",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="c3"
                          >
                            <ExpIcon
                              name="workexp"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpIcon-sc-1p80x6s-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:block;&::before{margin-top:30px;float:left;color:",
                                        [Function],
                                        ";font-size:60px;transition:color 0.5s;display:block;}&:hover::before{color:",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "ExpIcon",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpIcon-sc-1p80x6s-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="workexp"
                              >
                                <Icon
                                  className="c4"
                                  name="workexp"
                                >
                                  <Icon__Symbol
                                    className="c4"
                                    name="workexp"
                                  >
                                    <StyledComponent
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Icon__Symbol-sc-1v6tn9f-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display:inline-block;&::before{font-family:",
                                              [Function],
                                              ";font-style:normal;font-weight:normal;content:'",
                                              [Function],
                                              "';}",
                                            ],
                                          },
                                          "displayName": "Icon__Symbol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Icon__Symbol-sc-1v6tn9f-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      name="workexp"
                                    >
                                      <div
                                        className="c5 c4"
                                        name="workexp"
                                      />
                                    </StyledComponent>
                                  </Icon__Symbol>
                                </Icon>
                              </StyledComponent>
                            </ExpIcon>
                            <Title>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Title-sc-198jyi3-0",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "margin-left:80px;margin-bottom:10px;text-transform:uppercase;font-weight:bold;",
                                      ],
                                    },
                                    "displayName": "Title",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Title-sc-198jyi3-0",
                                    "target": "h4",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h4
                                  className="c6"
                                >
                                  <Translate
                                    id="Exp: GCS-intern Title"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: GCS-intern Title"
                                    >
                                      Missing translationId: Exp: GCS-intern Title for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </h4>
                              </StyledComponent>
                            </Title>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Translate
                                    id="Exp: GCS-intern Desc"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: GCS-intern Desc"
                                    >
                                      Missing translationId: Exp: GCS-intern Desc for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </p>
                              </StyledComponent>
                            </Description>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Bold>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Bold-jvs0xn-0",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "font-size:15px;font-weight:bold;",
                                            ],
                                          },
                                          "displayName": "Bold",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Bold-jvs0xn-0",
                                          "target": "b",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <b
                                        className="c8"
                                      >
                                        <Translate
                                          id="Exp: GCS-intern Skill"
                                        >
                                          <WrappedTranslate
                                            context={
                                              Object {
                                                "activeLanguage": undefined,
                                                "addTranslation": [Function],
                                                "addTranslationForLanguage": [Function],
                                                "defaultLanguage": undefined,
                                                "ignoreTranslateChildren": false,
                                                "initialize": [Function],
                                                "languages": Array [],
                                                "renderToStaticMarkup": false,
                                                "setActiveLanguage": [Function],
                                                "translate": [Function],
                                              }
                                            }
                                            id="Exp: GCS-intern Skill"
                                          >
                                            Missing translationId: Exp: GCS-intern Skill for language: \${ languageCode }
                                          </WrappedTranslate>
                                        </Translate>
                                      </b>
                                    </StyledComponent>
                                  </Bold>
                                </p>
                              </StyledComponent>
                            </Description>
                          </li>
                        </StyledComponent>
                      </Item__Container>
                    </Item>
                    <Item
                      description="Exp: Brand360 Desc"
                      key="Brand360"
                      skill="Exp: Brand360 Skill"
                      title="Exp: Brand360 Title"
                    >
                      <Item__Container>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Item__Container-sc-24iste-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "margin-bottom:50px;@media screen and (max-width:800px){margin-bottom:30px;}",
                                ],
                              },
                              "displayName": "Item__Container",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Item__Container-sc-24iste-0",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <li
                            className="c3"
                          >
                            <ExpIcon
                              name="workexp"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpIcon-sc-1p80x6s-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:block;&::before{margin-top:30px;float:left;color:",
                                        [Function],
                                        ";font-size:60px;transition:color 0.5s;display:block;}&:hover::before{color:",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "ExpIcon",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpIcon-sc-1p80x6s-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="workexp"
                              >
                                <Icon
                                  className="c4"
                                  name="workexp"
                                >
                                  <Icon__Symbol
                                    className="c4"
                                    name="workexp"
                                  >
                                    <StyledComponent
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Icon__Symbol-sc-1v6tn9f-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display:inline-block;&::before{font-family:",
                                              [Function],
                                              ";font-style:normal;font-weight:normal;content:'",
                                              [Function],
                                              "';}",
                                            ],
                                          },
                                          "displayName": "Icon__Symbol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Icon__Symbol-sc-1v6tn9f-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      name="workexp"
                                    >
                                      <div
                                        className="c5 c4"
                                        name="workexp"
                                      />
                                    </StyledComponent>
                                  </Icon__Symbol>
                                </Icon>
                              </StyledComponent>
                            </ExpIcon>
                            <Title>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Title-sc-198jyi3-0",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "margin-left:80px;margin-bottom:10px;text-transform:uppercase;font-weight:bold;",
                                      ],
                                    },
                                    "displayName": "Title",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Title-sc-198jyi3-0",
                                    "target": "h4",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h4
                                  className="c6"
                                >
                                  <Translate
                                    id="Exp: Brand360 Title"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: Brand360 Title"
                                    >
                                      Missing translationId: Exp: Brand360 Title for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </h4>
                              </StyledComponent>
                            </Title>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Translate
                                    id="Exp: Brand360 Desc"
                                  >
                                    <WrappedTranslate
                                      context={
                                        Object {
                                          "activeLanguage": undefined,
                                          "addTranslation": [Function],
                                          "addTranslationForLanguage": [Function],
                                          "defaultLanguage": undefined,
                                          "ignoreTranslateChildren": false,
                                          "initialize": [Function],
                                          "languages": Array [],
                                          "renderToStaticMarkup": false,
                                          "setActiveLanguage": [Function],
                                          "translate": [Function],
                                        }
                                      }
                                      id="Exp: Brand360 Desc"
                                    >
                                      Missing translationId: Exp: Brand360 Desc for language: \${ languageCode }
                                    </WrappedTranslate>
                                  </Translate>
                                </p>
                              </StyledComponent>
                            </Description>
                            <Description>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Description-iv5mo5-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "margin-left:80px;",
                                      ],
                                    },
                                    "displayName": "Description",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Description-iv5mo5-0",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <p
                                  className="c7"
                                >
                                  <Bold>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Bold-jvs0xn-0",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "font-size:15px;font-weight:bold;",
                                            ],
                                          },
                                          "displayName": "Bold",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Bold-jvs0xn-0",
                                          "target": "b",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <b
                                        className="c8"
                                      >
                                        <Translate
                                          id="Exp: Brand360 Skill"
                                        >
                                          <WrappedTranslate
                                            context={
                                              Object {
                                                "activeLanguage": undefined,
                                                "addTranslation": [Function],
                                                "addTranslationForLanguage": [Function],
                                                "defaultLanguage": undefined,
                                                "ignoreTranslateChildren": false,
                                                "initialize": [Function],
                                                "languages": Array [],
                                                "renderToStaticMarkup": false,
                                                "setActiveLanguage": [Function],
                                                "translate": [Function],
                                              }
                                            }
                                            id="Exp: Brand360 Skill"
                                          >
                                            Missing translationId: Exp: Brand360 Skill for language: \${ languageCode }
                                          </WrappedTranslate>
                                        </Translate>
                                      </b>
                                    </StyledComponent>
                                  </Bold>
                                </p>
                              </StyledComponent>
                            </Description>
                          </li>
                        </StyledComponent>
                      </Item__Container>
                    </Item>
                  </ul>
                </StyledComponent>
              </List__Container>
            </List>
          </div>
        </section>
      </StyledComponent>
    </Container__Style>
  </Container>
</Experiences>
`;
