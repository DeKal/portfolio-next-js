// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Nav Content should render with isShowNavContent disable 1`] = `
.c1 {
  display: block;
  position: absolute;
  top: 0;
  left: 20px;
  width: 80px;
  color: #ecf0f1;
  font-size: 40px;
  line-height: 80px;
  font-family: Georgia,Times,"Times New Roman",serif;
  -webkit-letter-spacing: -5px;
  -moz-letter-spacing: -5px;
  -ms-letter-spacing: -5px;
  letter-spacing: -5px;
  font-weight: bold;
  text-align: center;
  background-color: #FFA726;
  border: none;
}

.c1::after {
  content: '';
  position: absolute;
  bottom: -29px;
  left: 0;
  z-index: 250;
  border-top: 30px solid #FFA726;
  border-left: 40px solid transparent;
  border-right: 40px solid transparent;
}

.c2 {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
}

.c2::after {
  content: '';
  position: absolute;
  bottom: -15px;
  right: -2px;
  width: 50px;
  height: 5px;
  background-color: transparent;
  box-shadow: 0 1px 2px -1px #2c3e50;
  -webkit-transform: rotate(-37deg);
  -ms-transform: rotate(-37deg);
  transform: rotate(-37deg);
}

.c2::before {
  content: '';
  position: absolute;
  bottom: -15px;
  left: -2px;
  width: 50px;
  height: 5px;
  background-color: transparent;
  box-shadow: 0 1px 2px -1px #2c3e50;
  -webkit-transform: rotate(37deg);
  -ms-transform: rotate(37deg);
  transform: rotate(37deg);
}

.c6 {
  line-height: 80px;
  font-size: 22px;
  -webkit-transition: color 0.5s;
  transition: color 0.5s;
}

.c6:hover {
  color: #bdc3c7;
  border: none;
}

.c5 {
  line-height: 80px;
  font-size: 22px;
  -webkit-transition: color 0.5s;
  transition: color 0.5s;
  color: #bdc3c7;
  border: none;
}

.c5:hover {
  color: #bdc3c7;
  border: none;
}

.c0 {
  position: relative;
  min-height: 80px;
  background-color: #ecf0f1;
  margin-top: -40px;
  box-shadow: 0 1px 2px -1px #2c3e50;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

.c3 {
  text-align: right;
}

.c4 {
  display: inline-block;
  margin-left: 18px;
}

@media screen and (max-width:960px) {
  .c1 {
    display: none;
  }
}

@media screen and (max-width:800px) {
  .c6 {
    font-size: 18px;
    line-height: 2;
    border-bottom: none;
  }
}

@media screen and (max-width:800px) {
  .c5 {
    font-size: 18px;
    line-height: 2;
    border-bottom: none;
  }
}

@media screen and (max-width:800px) {
  .c0 {
    margin-top: -200px;
  }
}

@media screen and (max-width:800px) {
  .c3 {
    text-align: center;
  }
}

@media screen and (max-width:800px) {
  .c4 {
    margin: 0 9px;
    display: block;
    border-bottom: 1px dashed #bdc3c7;
  }
}

<NavContent
  isShowNavContent={false}
>
  <NavContent__Container
    className="second-nav"
    isShowNavContent={false}
  >
    <StyledComponent
      className="second-nav"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "NavContent__Container-sc-1gp15ts-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "position:relative;min-height:",
              [Function],
              ";background-color:",
              [Function],
              ";margin-top:",
              [Function],
              ";box-shadow:",
              [Function],
              ";transition:all 0.5s;@media screen and (max-width:800px){margin-top:",
              [Function],
              ";}",
            ],
          },
          "displayName": "NavContent__Container",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "NavContent__Container-sc-1gp15ts-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      isShowNavContent={false}
    >
      <div
        className="c0 second-nav"
      >
        <div
          className="container"
        >
          <NavLogo>
            <NavLogo__Logo>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "NavLogo__Logo-sc-1n7j63d-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "display:block;position:absolute;top:0;left:20px;width:",
                        [Function],
                        ";color:",
                        [Function],
                        ";font-size:",
                        [Function],
                        ";line-height:",
                        [Function],
                        ";font-family:",
                        [Function],
                        ";letter-spacing:-5px;font-weight:bold;text-align:center;background-color:",
                        [Function],
                        ";border:none;@media screen and (max-width:960px){display:none;}&::after{content:'';position:absolute;bottom:-29px;left:0;z-index:250;border-top:30px solid ",
                        [Function],
                        ";border-left:40px solid transparent;border-right:40px solid transparent;}",
                      ],
                    },
                    "displayName": "NavLogo__Logo",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "NavLogo__Logo-sc-1n7j63d-0",
                    "target": "a",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <a
                  className="c1"
                >
                  <NavLogo__LogoText>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavLogo__LogoText-sc-1n7j63d-1",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              "position:relative;display:block;width:100%;height:100%;&::after{content:'';position:absolute;bottom:-15px;right:-2px;width:50px;height:5px;background-color:transparent;box-shadow:",
                              [Function],
                              ";transform:rotate(-37deg);}&::before{content:'';position:absolute;bottom:-15px;left:-2px;width:50px;height:5px;background-color:transparent;box-shadow:",
                              [Function],
                              ";transform:rotate(37deg);}",
                            ],
                          },
                          "displayName": "NavLogo__LogoText",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavLogo__LogoText-sc-1n7j63d-1",
                          "target": "span",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <span
                        className="c2"
                      >
                        JD
                      </span>
                    </StyledComponent>
                  </NavLogo__LogoText>
                </a>
              </StyledComponent>
            </NavLogo__Logo>
          </NavLogo>
          <NavContent__NavMenu
            className="menu"
          >
            <StyledComponent
              className="menu"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "NavContent__NavMenu-sc-1gp15ts-1",
                    "isStatic": false,
                    "lastClassName": "c3",
                    "rules": Array [
                      "text-align:right;@media screen and (max-width:800px){text-align:center;}",
                    ],
                  },
                  "displayName": "NavContent__NavMenu",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "NavContent__NavMenu-sc-1gp15ts-1",
                  "target": "nav",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <nav
                className="c3 menu"
              >
                <ul>
                  <NavContent__NavLi
                    key="Home"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={true}
                          page="Home"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__SelectedContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__SelectedContainer-sc-1t8qtmq-1",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                      "color:",
                                      [Function],
                                      ";border:none;",
                                    ],
                                  },
                                  "displayName": "NavItem__SelectedContainer",
                                  "foldedComponentIds": Array [
                                    "NavItem__Container-sc-1t8qtmq-0",
                                  ],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__SelectedContainer-sc-1t8qtmq-1",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <a
                                className="c5"
                              >
                                <Translate
                                  id="Home"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Home"
                                  >
                                    Missing translationId: Home for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__SelectedContainer>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="About"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="About"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#About"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#About"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#About"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="About"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="About"
                                  >
                                    Missing translationId: About for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Experiences"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Experiences"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Experiences"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Experiences"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Experiences"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Experiences"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Experiences"
                                  >
                                    Missing translationId: Experiences for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Certifications"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Certifications"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Certifications"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Certifications"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Certifications"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Certifications"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Certifications"
                                  >
                                    Missing translationId: Certifications for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Projects"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Projects"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Projects"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Projects"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Projects"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Projects"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Projects"
                                  >
                                    Missing translationId: Projects for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Contacts"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Contacts"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Contacts"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Contacts"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Contacts"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Contacts"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Contacts"
                                  >
                                    Missing translationId: Contacts for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                </ul>
              </nav>
            </StyledComponent>
          </NavContent__NavMenu>
        </div>
      </div>
    </StyledComponent>
  </NavContent__Container>
</NavContent>
`;

exports[`Nav Content should render with isShowNavContent enable 1`] = `
.c1 {
  display: block;
  position: absolute;
  top: 0;
  left: 20px;
  width: 80px;
  color: #ecf0f1;
  font-size: 40px;
  line-height: 80px;
  font-family: Georgia,Times,"Times New Roman",serif;
  -webkit-letter-spacing: -5px;
  -moz-letter-spacing: -5px;
  -ms-letter-spacing: -5px;
  letter-spacing: -5px;
  font-weight: bold;
  text-align: center;
  background-color: #FFA726;
  border: none;
}

.c1::after {
  content: '';
  position: absolute;
  bottom: -29px;
  left: 0;
  z-index: 250;
  border-top: 30px solid #FFA726;
  border-left: 40px solid transparent;
  border-right: 40px solid transparent;
}

.c2 {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
}

.c2::after {
  content: '';
  position: absolute;
  bottom: -15px;
  right: -2px;
  width: 50px;
  height: 5px;
  background-color: transparent;
  box-shadow: 0 1px 2px -1px #2c3e50;
  -webkit-transform: rotate(-37deg);
  -ms-transform: rotate(-37deg);
  transform: rotate(-37deg);
}

.c2::before {
  content: '';
  position: absolute;
  bottom: -15px;
  left: -2px;
  width: 50px;
  height: 5px;
  background-color: transparent;
  box-shadow: 0 1px 2px -1px #2c3e50;
  -webkit-transform: rotate(37deg);
  -ms-transform: rotate(37deg);
  transform: rotate(37deg);
}

.c6 {
  line-height: 80px;
  font-size: 22px;
  -webkit-transition: color 0.5s;
  transition: color 0.5s;
}

.c6:hover {
  color: #bdc3c7;
  border: none;
}

.c5 {
  line-height: 80px;
  font-size: 22px;
  -webkit-transition: color 0.5s;
  transition: color 0.5s;
  color: #bdc3c7;
  border: none;
}

.c5:hover {
  color: #bdc3c7;
  border: none;
}

.c0 {
  position: relative;
  min-height: 80px;
  background-color: #ecf0f1;
  margin-top: 40px;
  box-shadow: 0 1px 2px -1px #2c3e50;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

.c3 {
  text-align: right;
}

.c4 {
  display: inline-block;
  margin-left: 18px;
}

@media screen and (max-width:960px) {
  .c1 {
    display: none;
  }
}

@media screen and (max-width:800px) {
  .c6 {
    font-size: 18px;
    line-height: 2;
    border-bottom: none;
  }
}

@media screen and (max-width:800px) {
  .c5 {
    font-size: 18px;
    line-height: 2;
    border-bottom: none;
  }
}

@media screen and (max-width:800px) {
  .c0 {
    margin-top: 40px;
  }
}

@media screen and (max-width:800px) {
  .c3 {
    text-align: center;
  }
}

@media screen and (max-width:800px) {
  .c4 {
    margin: 0 9px;
    display: block;
    border-bottom: 1px dashed #bdc3c7;
  }
}

<NavContent
  isShowNavContent={true}
>
  <NavContent__Container
    className="second-nav"
    isShowNavContent={true}
  >
    <StyledComponent
      className="second-nav"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "NavContent__Container-sc-1gp15ts-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "position:relative;min-height:",
              [Function],
              ";background-color:",
              [Function],
              ";margin-top:",
              [Function],
              ";box-shadow:",
              [Function],
              ";transition:all 0.5s;@media screen and (max-width:800px){margin-top:",
              [Function],
              ";}",
            ],
          },
          "displayName": "NavContent__Container",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "NavContent__Container-sc-1gp15ts-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      isShowNavContent={true}
    >
      <div
        className="c0 second-nav"
      >
        <div
          className="container"
        >
          <NavLogo>
            <NavLogo__Logo>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "NavLogo__Logo-sc-1n7j63d-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "display:block;position:absolute;top:0;left:20px;width:",
                        [Function],
                        ";color:",
                        [Function],
                        ";font-size:",
                        [Function],
                        ";line-height:",
                        [Function],
                        ";font-family:",
                        [Function],
                        ";letter-spacing:-5px;font-weight:bold;text-align:center;background-color:",
                        [Function],
                        ";border:none;@media screen and (max-width:960px){display:none;}&::after{content:'';position:absolute;bottom:-29px;left:0;z-index:250;border-top:30px solid ",
                        [Function],
                        ";border-left:40px solid transparent;border-right:40px solid transparent;}",
                      ],
                    },
                    "displayName": "NavLogo__Logo",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "NavLogo__Logo-sc-1n7j63d-0",
                    "target": "a",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <a
                  className="c1"
                >
                  <NavLogo__LogoText>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavLogo__LogoText-sc-1n7j63d-1",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              "position:relative;display:block;width:100%;height:100%;&::after{content:'';position:absolute;bottom:-15px;right:-2px;width:50px;height:5px;background-color:transparent;box-shadow:",
                              [Function],
                              ";transform:rotate(-37deg);}&::before{content:'';position:absolute;bottom:-15px;left:-2px;width:50px;height:5px;background-color:transparent;box-shadow:",
                              [Function],
                              ";transform:rotate(37deg);}",
                            ],
                          },
                          "displayName": "NavLogo__LogoText",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavLogo__LogoText-sc-1n7j63d-1",
                          "target": "span",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <span
                        className="c2"
                      >
                        JD
                      </span>
                    </StyledComponent>
                  </NavLogo__LogoText>
                </a>
              </StyledComponent>
            </NavLogo__Logo>
          </NavLogo>
          <NavContent__NavMenu
            className="menu"
          >
            <StyledComponent
              className="menu"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "NavContent__NavMenu-sc-1gp15ts-1",
                    "isStatic": false,
                    "lastClassName": "c3",
                    "rules": Array [
                      "text-align:right;@media screen and (max-width:800px){text-align:center;}",
                    ],
                  },
                  "displayName": "NavContent__NavMenu",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "NavContent__NavMenu-sc-1gp15ts-1",
                  "target": "nav",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <nav
                className="c3 menu"
              >
                <ul>
                  <NavContent__NavLi
                    key="Home"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={true}
                          page="Home"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__SelectedContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__SelectedContainer-sc-1t8qtmq-1",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                      "color:",
                                      [Function],
                                      ";border:none;",
                                    ],
                                  },
                                  "displayName": "NavItem__SelectedContainer",
                                  "foldedComponentIds": Array [
                                    "NavItem__Container-sc-1t8qtmq-0",
                                  ],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__SelectedContainer-sc-1t8qtmq-1",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <a
                                className="c5"
                              >
                                <Translate
                                  id="Home"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Home"
                                  >
                                    Missing translationId: Home for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__SelectedContainer>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="About"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="About"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#About"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#About"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#About"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="About"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="About"
                                  >
                                    Missing translationId: About for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Experiences"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Experiences"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Experiences"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Experiences"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Experiences"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Experiences"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Experiences"
                                  >
                                    Missing translationId: Experiences for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Certifications"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Certifications"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Certifications"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Certifications"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Certifications"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Certifications"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Certifications"
                                  >
                                    Missing translationId: Certifications for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Projects"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Projects"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Projects"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Projects"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Projects"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Projects"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Projects"
                                  >
                                    Missing translationId: Projects for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                  <NavContent__NavLi
                    key="Contacts"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "NavContent__NavLi-sc-1gp15ts-2",
                            "isStatic": false,
                            "lastClassName": "c4",
                            "rules": Array [
                              "display:inline-block;margin-left:18px;@media screen and (max-width:800px){margin:0 9px;display:block;border-bottom:1px dashed ",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "NavContent__NavLi",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "NavContent__NavLi-sc-1gp15ts-2",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <li
                        className="c4"
                      >
                        <NavItem
                          isSelected={false}
                          page="Contacts"
                          setSelectedPage={[Function]}
                        >
                          <NavItem__Container
                            data-test-id="nav-link"
                            href="#Contacts"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test-id="nav-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "NavItem__Container-sc-1t8qtmq-0",
                                    "isStatic": false,
                                    "lastClassName": "c6",
                                    "rules": Array [
                                      "line-height:",
                                      [Function],
                                      ";font-size:",
                                      [Function],
                                      ";transition:color 0.5s;&:hover{color:",
                                      [Function],
                                      ";border:none;}@media screen and (max-width:800px){font-size:",
                                      [Function],
                                      ";line-height:2;border-bottom:none;}",
                                    ],
                                  },
                                  "displayName": "NavItem__Container",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "NavItem__Container-sc-1t8qtmq-0",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="#Contacts"
                              onClick={[Function]}
                            >
                              <a
                                className="c6"
                                data-test-id="nav-link"
                                href="#Contacts"
                                onClick={[Function]}
                              >
                                <Translate
                                  id="Contacts"
                                >
                                  <WrappedTranslate
                                    context={
                                      Object {
                                        "activeLanguage": undefined,
                                        "addTranslation": [Function],
                                        "addTranslationForLanguage": [Function],
                                        "defaultLanguage": undefined,
                                        "ignoreTranslateChildren": false,
                                        "initialize": [Function],
                                        "languages": Array [],
                                        "renderToStaticMarkup": false,
                                        "setActiveLanguage": [Function],
                                        "translate": [Function],
                                      }
                                    }
                                    id="Contacts"
                                  >
                                    Missing translationId: Contacts for language: \${ languageCode }
                                  </WrappedTranslate>
                                </Translate>
                              </a>
                            </StyledComponent>
                          </NavItem__Container>
                        </NavItem>
                      </li>
                    </StyledComponent>
                  </NavContent__NavLi>
                </ul>
              </nav>
            </StyledComponent>
          </NavContent__NavMenu>
        </div>
      </div>
    </StyledComponent>
  </NavContent__Container>
</NavContent>
`;

exports[`Nav Content should render without throwing an error 1`] = `
<NavContent__Container
  className="second-nav"
>
  <div
    className="container"
  >
    <NavLogo />
    <NavContent__NavMenu
      className="menu"
    >
      <ul>
        <NavContent__NavLi
          key="Home"
        >
          <NavItem
            isSelected={true}
            page="Home"
            setSelectedPage={[Function]}
          />
        </NavContent__NavLi>
        <NavContent__NavLi
          key="About"
        >
          <NavItem
            isSelected={false}
            page="About"
            setSelectedPage={[Function]}
          />
        </NavContent__NavLi>
        <NavContent__NavLi
          key="Experiences"
        >
          <NavItem
            isSelected={false}
            page="Experiences"
            setSelectedPage={[Function]}
          />
        </NavContent__NavLi>
        <NavContent__NavLi
          key="Certifications"
        >
          <NavItem
            isSelected={false}
            page="Certifications"
            setSelectedPage={[Function]}
          />
        </NavContent__NavLi>
        <NavContent__NavLi
          key="Projects"
        >
          <NavItem
            isSelected={false}
            page="Projects"
            setSelectedPage={[Function]}
          />
        </NavContent__NavLi>
        <NavContent__NavLi
          key="Contacts"
        >
          <NavItem
            isSelected={false}
            page="Contacts"
            setSelectedPage={[Function]}
          />
        </NavContent__NavLi>
      </ul>
    </NavContent__NavMenu>
  </div>
</NavContent__Container>
`;
