// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Nav Link Big Device >= 600px should change Language when clicking 1`] = `
<LocalizedComponent
  lang="vn"
  selectedLang="en"
  setActiveLanguage={
    [MockFunction] {
      "calls": Array [
        Array [
          "vn",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setSelectedLang={
    [MockFunction] {
      "calls": Array [
        Array [
          "vn",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <NavLink
    addTranslation={[Function]}
    addTranslationForLanguage={[Function]}
    ignoreTranslateChildren={false}
    initialize={[Function]}
    lang="vn"
    languages={Array []}
    renderToStaticMarkup={false}
    selectedLang="en"
    setActiveLanguage={
      [MockFunction] {
        "calls": Array [
          Array [
            "vn",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    setSelectedLang={
      [MockFunction] {
        "calls": Array [
          Array [
            "vn",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    translate={[Function]}
  >
    <NavLink__Container
      isSelected={false}
      onClick={[Function]}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NavLink__Container-v6tuz9-0",
              "isStatic": false,
              "lastClassName": "bfwuOx",
              "rules": Array [
                "color:",
                [Function],
                ";border:",
                [Function],
                ";border-color:",
                [Function],
                ";font-family:",
                [Function],
                ";font-style:italic;line-height:",
                [Function],
                ";transition:color 0.5s;&:hover{color:",
                [Function],
                ";border:none;}",
              ],
            },
            "displayName": "NavLink__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NavLink__Container-v6tuz9-0",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isSelected={false}
        onClick={[Function]}
      >
        <a
          className="NavLink__Container-v6tuz9-0 bfwuOx"
          onClick={[Function]}
        >
          <Translate
            id="vietnamese"
          >
            <WrappedTranslate
              context={
                Object {
                  "activeLanguage": undefined,
                  "addTranslation": [Function],
                  "addTranslationForLanguage": [Function],
                  "defaultLanguage": undefined,
                  "ignoreTranslateChildren": false,
                  "initialize": [Function],
                  "languages": Array [],
                  "renderToStaticMarkup": false,
                  "setActiveLanguage": [Function],
                  "translate": [Function],
                }
              }
              id="vietnamese"
            >
              Missing translationId: vietnamese for language: \${ languageCode }
            </WrappedTranslate>
          </Translate>
        </a>
      </StyledComponent>
    </NavLink__Container>
  </NavLink>
</LocalizedComponent>
`;

exports[`Nav Link Big Device >= 600px should render with English selected 1`] = `
<LocalizedComponent
  lang="en"
  selectedLang="en"
>
  <NavLink
    addTranslation={[Function]}
    addTranslationForLanguage={[Function]}
    ignoreTranslateChildren={false}
    initialize={[Function]}
    lang="en"
    languages={Array []}
    renderToStaticMarkup={false}
    selectedLang="en"
    setActiveLanguage={[Function]}
    translate={[Function]}
  >
    <NavLink__Container
      isSelected={true}
      onClick={[Function]}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NavLink__Container-v6tuz9-0",
              "isStatic": false,
              "lastClassName": "fMGHjQ",
              "rules": Array [
                "color:",
                [Function],
                ";border:",
                [Function],
                ";border-color:",
                [Function],
                ";font-family:",
                [Function],
                ";font-style:italic;line-height:",
                [Function],
                ";transition:color 0.5s;&:hover{color:",
                [Function],
                ";border:none;}",
              ],
            },
            "displayName": "NavLink__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NavLink__Container-v6tuz9-0",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isSelected={true}
        onClick={[Function]}
      >
        <a
          className="NavLink__Container-v6tuz9-0 fMGHjQ"
          onClick={[Function]}
        >
          <Translate
            id="english"
          >
            <WrappedTranslate
              context={
                Object {
                  "activeLanguage": undefined,
                  "addTranslation": [Function],
                  "addTranslationForLanguage": [Function],
                  "defaultLanguage": undefined,
                  "ignoreTranslateChildren": false,
                  "initialize": [Function],
                  "languages": Array [],
                  "renderToStaticMarkup": false,
                  "setActiveLanguage": [Function],
                  "translate": [Function],
                }
              }
              id="english"
            >
              Missing translationId: english for language: \${ languageCode }
            </WrappedTranslate>
          </Translate>
        </a>
      </StyledComponent>
    </NavLink__Container>
  </NavLink>
</LocalizedComponent>
`;

exports[`Nav Link Big Device >= 600px should render with Vietnamese selected 1`] = `
<LocalizedComponent
  lang="vn"
  selectedLang="vn"
>
  <NavLink
    addTranslation={[Function]}
    addTranslationForLanguage={[Function]}
    ignoreTranslateChildren={false}
    initialize={[Function]}
    lang="vn"
    languages={Array []}
    renderToStaticMarkup={false}
    selectedLang="vn"
    setActiveLanguage={[Function]}
    translate={[Function]}
  >
    <NavLink__Container
      isSelected={true}
      onClick={[Function]}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NavLink__Container-v6tuz9-0",
              "isStatic": false,
              "lastClassName": "fMGHjQ",
              "rules": Array [
                "color:",
                [Function],
                ";border:",
                [Function],
                ";border-color:",
                [Function],
                ";font-family:",
                [Function],
                ";font-style:italic;line-height:",
                [Function],
                ";transition:color 0.5s;&:hover{color:",
                [Function],
                ";border:none;}",
              ],
            },
            "displayName": "NavLink__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NavLink__Container-v6tuz9-0",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isSelected={true}
        onClick={[Function]}
      >
        <a
          className="NavLink__Container-v6tuz9-0 fMGHjQ"
          onClick={[Function]}
        >
          <Translate
            id="vietnamese"
          >
            <WrappedTranslate
              context={
                Object {
                  "activeLanguage": undefined,
                  "addTranslation": [Function],
                  "addTranslationForLanguage": [Function],
                  "defaultLanguage": undefined,
                  "ignoreTranslateChildren": false,
                  "initialize": [Function],
                  "languages": Array [],
                  "renderToStaticMarkup": false,
                  "setActiveLanguage": [Function],
                  "translate": [Function],
                }
              }
              id="vietnamese"
            >
              Missing translationId: vietnamese for language: \${ languageCode }
            </WrappedTranslate>
          </Translate>
        </a>
      </StyledComponent>
    </NavLink__Container>
  </NavLink>
</LocalizedComponent>
`;

exports[`Nav Link Small Device < 600px should render with English selected 1`] = `
<LocalizedComponent
  lang="en"
  selectedLang="en"
>
  <NavLink
    addTranslation={[Function]}
    addTranslationForLanguage={[Function]}
    ignoreTranslateChildren={false}
    initialize={[Function]}
    lang="en"
    languages={Array []}
    renderToStaticMarkup={false}
    selectedLang="en"
    setActiveLanguage={[Function]}
    translate={[Function]}
  >
    <NavLink__Container
      isSelected={true}
      onClick={[Function]}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NavLink__Container-v6tuz9-0",
              "isStatic": false,
              "lastClassName": "fMGHjQ",
              "rules": Array [
                "color:",
                [Function],
                ";border:",
                [Function],
                ";border-color:",
                [Function],
                ";font-family:",
                [Function],
                ";font-style:italic;line-height:",
                [Function],
                ";transition:color 0.5s;&:hover{color:",
                [Function],
                ";border:none;}",
              ],
            },
            "displayName": "NavLink__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NavLink__Container-v6tuz9-0",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isSelected={true}
        onClick={[Function]}
      >
        <a
          className="NavLink__Container-v6tuz9-0 fMGHjQ"
          onClick={[Function]}
        >
          en
        </a>
      </StyledComponent>
    </NavLink__Container>
  </NavLink>
</LocalizedComponent>
`;

exports[`Nav Link Small Device < 600px should render with Vietnamese selected 1`] = `
<LocalizedComponent
  lang="vn"
  selectedLang="vn"
>
  <NavLink
    addTranslation={[Function]}
    addTranslationForLanguage={[Function]}
    ignoreTranslateChildren={false}
    initialize={[Function]}
    lang="vn"
    languages={Array []}
    renderToStaticMarkup={false}
    selectedLang="vn"
    setActiveLanguage={[Function]}
    translate={[Function]}
  >
    <NavLink__Container
      isSelected={true}
      onClick={[Function]}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NavLink__Container-v6tuz9-0",
              "isStatic": false,
              "lastClassName": "fMGHjQ",
              "rules": Array [
                "color:",
                [Function],
                ";border:",
                [Function],
                ";border-color:",
                [Function],
                ";font-family:",
                [Function],
                ";font-style:italic;line-height:",
                [Function],
                ";transition:color 0.5s;&:hover{color:",
                [Function],
                ";border:none;}",
              ],
            },
            "displayName": "NavLink__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NavLink__Container-v6tuz9-0",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isSelected={true}
        onClick={[Function]}
      >
        <a
          className="NavLink__Container-v6tuz9-0 fMGHjQ"
          onClick={[Function]}
        >
          vn
        </a>
      </StyledComponent>
    </NavLink__Container>
  </NavLink>
</LocalizedComponent>
`;
